import logging
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

from api.referrals import create_referral
from keyboards.start_keyboards import main_menu_keyboard


logger = logging.getLogger(__name__)
router = Router()

#FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–∏—á–∏
class ReferralState(StatesGroup):
    waiting_for_phone = State()

@router.message(F.text == "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞")
async def invite_friend(message:Message,state:FSMContext):
    data = await state.get_data()
    client_id = data.get("client_id")

    if not client_id:
        await message.answer("–û—à–∏–±–∫–∞, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à—É —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ (/start).")
        return
    
    back_kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–ù–∞–∑–∞–¥")]],
        resize_keyboard= True
    )

    await message.answer(
        "üë• –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥—Ä—É–≥–∞. –ö–æ–≥–¥–∞ –æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –∏ –∑–∞–ø–∏—à–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –ø—Ä–∏—ë–º, –≤–∞–º –æ–±–æ–∏–º –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è –ø–æ 500 –±–∞–ª–ª–æ–≤.\n"
        "–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 7 800 555 35 35 –∏–ª–∏ 78005553535",
        reply_markup=back_kb,
    )
    await state.set_state(ReferralState.waiting_for_phone)


@router.message(ReferralState.waiting_for_phone)
async def procces_referral_phone(message:Message,state:FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: –µ—Å–ª–∏ "–ù–∞–∑–∞–¥" ‚Äî –æ—Ç–º–µ–Ω—è–µ—Ç, –∏–Ω–∞—á–µ –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª.
    –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã –∏–∑ –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ—Å—Ç—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é (–¥–ª–∏–Ω–∞ –∏ —Ü–∏—Ñ—Ä—ã).
    –ü–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞ –∏–ª–∏ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    if message.text =="–ù–∞–∑–∞–¥":
        await state.set_state(None)
        await message.answer("üòî –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=main_menu_keyboard())
        return
    
    data = await state.get_data()
    client_id= data.get("client_id")
    referral_phone = message.text.strip().replace(" ", "")

    if not referral_phone.isdigit() or not (10 <= len(referral_phone) <= 12):
        await message.answer(
            "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä. –ü—Ä–∏–º–µ—Ä: 78005553535 –∏–ª–∏ 7 800 555 35 35. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥'.",
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text="–ù–∞–∑–∞–¥")]],
                resize_keyboard=True,
            ),
        )
        return
    
    try:
        # –°–æ–∑–¥–∞—ë–º —Ä–µ—Ñ–µ—Ä–∞–ª —á–µ—Ä–µ–∑ API
        referral = await create_referral(client_id=client_id, referral_phone=referral_phone,is_active=False)
        logger.info("Referral created for client %s: %s", client_id, referral.id)
        await message.answer(
            f"‚úÖ –î—Ä—É–≥ –ø—Ä–∏–≥–ª–∞—à—ë–Ω! –ö–æ–≥–¥–∞ –æ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –∑–∞–ø–∏—à–µ—Ç—Å—è, –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 500 –±–∞–ª–ª–æ–≤. üòä",
            reply_markup=main_menu_keyboard(),
        )
    except Exception as err:
        logger.error("Error creating referral: %s", err)
        error_msg = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –ø—Ä–∏–≥–ª–∞—à—ë–Ω –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        if "unique" in str(err).lower():  # –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∞–∫—É—é
            error_msg = "‚ùå –≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –ø—Ä–∏–≥–ª–∞—à—ë–Ω –≤–∞–º–∏ –∏–ª–∏ –∫–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º."
        await message.answer(error_msg, reply_markup=main_menu_keyboard())
    
    await state.set_state(None)